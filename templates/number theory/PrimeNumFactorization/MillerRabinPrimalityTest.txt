//for testing a 32 bit integer it is only necessary to check the first 4 prime bases: 2, 3, 5 and 7. And for testing 64 bit integer it is enough to check the first 12 prime bases: 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, and 37.

bool isComposite(ll a, ll d, ll s, ll n)
{
    ll res = binExp(a, d, n);
 
    if (res == 1 || res == n - 1)
    {
        return false;
    }

    for (ll i = 1; i < s; i++)
    {
        res = mulmod(res,res,n);

        if (res == n - 1)
        {
            return false;
        }
    }
    
    return true;
}
 
bool millerRabin(ll n)
{
    if (n <= 4)
    {
        return (n == 2 || n == 3);
    }

    if(n % 2 == 0)
    {
        return false;
    }
 
    ll d = n - 1, s = 0;
 
    while (d % 2 == 0)
    {
        d /= 2;
        s++;
    }
 
    for (ll a : {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37})
    {
        if (n == a)
        {
            return true;
        }
 
        if (isComposite(a, d, s, n))
        {
            return false;
        }
    }

    return true;
}